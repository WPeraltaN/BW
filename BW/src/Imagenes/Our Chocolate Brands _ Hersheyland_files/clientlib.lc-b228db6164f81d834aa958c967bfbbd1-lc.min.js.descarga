document.addEventListener('DOMContentLoaded', function() {
            let quicklinkShortTitle = '';
            let noofword = 0;
            let firstheight;
            let windowHeightslider = window.innerHeight;

         //FOR PARALLAX - MOVE THESE FUNCTIONS INTO SEPARATE forEach FUNCTION WHEN 'PARALLAX-APPLY' is TRUE


 if(document.querySelector("div[parallax-apply='true']")){
        let transfy;
    document.querySelectorAll("div[parallax-apply='true']").forEach(function(component) {
        if (component.parentElement.querySelector(".animationEnabled").value == "quick-links_default" || component.parentElement.querySelector(".animationEnabled").value == "quick-links_secondary") {
            let parallaxSpeed = parseInt(component.getAttribute('parallax-speed'));
            let flagSlider = component.parentNode.closest('.cmp-slider-container.quick-links');
            if (flagSlider.querySelector('.animationflagSlider').value == "true") {
                let allElementsslider = flagSlider.querySelectorAll('.cmp-slider-container.quick-links .cmp-slider.quick-links');
                let counter = 0;
                for (let i = 0; i < allElementsslider.length; i++) { //  loop through the sections
                    if (allElementsslider[i].parentNode.closest('.has-background-img')) {
                        if (allElementsslider[i].parentNode.closest('.has-background-img').querySelector('.angle-container').style.backgroundImage != '') {
                            allElementsslider[i].parentNode.closest('.has-background-img').querySelector('.angle-container').classList.add('parallax-apply-element');
                        }
                    }
                }
            }
            const parallaxApplyEelement = document.querySelectorAll(".parallax-apply-element");
            parallaxApplyEelement.forEach((el) => {
                el.classList.add("loading");
            });
            const observerOptions = {
                root: null,
                rootMargin: "",
                threshold: 0
            };
            function observerCallback(entries) {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add("parallax-item");
                        transfy=0;
                    }
                    else {
                        entry.target.classList.remove("parallax-item");
                        //entry.target.style.removeProperty('transform');
                    }
                });
            }
            const observer = new IntersectionObserver(observerCallback, observerOptions);
            parallaxApplyEelement.forEach((el) => observer.observe(el));
        }
    });
    let allElementsviewportOffset = [];
    let allElementstop = [];
    const elemsParallaxScroll = () => {
        if (document.querySelectorAll('.parallax-item').length > 0) {
            let allElementsslider = document.querySelectorAll('.parallax-item');
            for (let i = 0; i < allElementsslider.length; i++) {
                allElementsslider[i].classList.add('parallax-container');
                allElementsviewportOffset[i] = allElementsslider[i].getBoundingClientRect();
                allElementstop[i] = allElementsviewportOffset[i].top;
                let parallaxSpeed = allElementsslider[i].parentNode.querySelector('.cmp-slider').getAttribute('parallax-speed');
                const height = allElementsslider[i].getBoundingClientRect().height;
                const percentage = Math.min(Math.max(pageYOffset / height, 0), 1);
                 transfy = percentage * (allElementstop[i] / parallaxSpeed) ;
        		const finaltransfy= transfy+"px";
                allElementsslider[i].style.transform = 'translateY(' + finaltransfy + ') scale(1)';
        		document.documentElement.style.setProperty('--pyt', finaltransfy );
                //allElementsslider[i].setAttribute("transfy", transfy);
            }
        } else {
        }
    }
    let passiveSupported = false;
    try {
        window.addEventListener("test", null, Object.defineProperty({}, "passive", {
            get: function() {
                passiveSupported = true;
            }
        }));
    } catch (err) {};
    elemsParallaxScroll();
    window.addEventListener('scroll', elemsParallaxScroll, passiveSupported ? {
        passive: true
    } : false);
}
	setTimeout(function() {
          if (document.querySelectorAll('.cmp-secondary-slider__title').length > 0) {
          quicklinkShortTitle = document.querySelectorAll('.cmp-secondary-slider__title span.h4 span');
          noofword = 30;

      } else {
          quicklinkShortTitle = document.querySelectorAll('.cmp-quick-slider__title span.h4 span');
          noofword = 60;

      }
      for (var k = 0; k < quicklinkShortTitle.length; k++) {
          if (quicklinkShortTitle[k].innerText.length > noofword) {
              let quicklinkShortTitleMax = quicklinkShortTitle[k].innerText.substr(0, noofword);
              quicklinkShortTitle[k].innerText = quicklinkShortTitleMax;
          }
      }

      var quicklinkShortDesc = document.querySelectorAll('.quicklinkShortDesc');

      for (var i = 0; i < quicklinkShortDesc.length; i++) {
          if (quicklinkShortDesc[i].innerText.length > 90) {
              let quicklinkShortDescMax = quicklinkShortDesc[i].innerText.substr(0, 90);
              quicklinkShortDesc[i].innerText = quicklinkShortDescMax;
          }
      }
  }, 1000);
  setTimeout(function() {
      var els = document.querySelectorAll('.tns-item');
      for (var i = 0; i < els.length; i++) {
          els[i].setAttribute("role", "option");
      }
  }, 5000);

   /* setTimeout(function(){
        var totalprodslideritem = document.querySelectorAll('.owl-carousel.owl-drag.product-slider .owl-stage-outer.owl-height');
        for (var j=0; j < totalprodslideritem.length; j++) {
        var parentItemheight = totalprodslideritem[j].clientHeight;
        totalprodslideritem[j].style.height=parentItemheight+12+"px";
             }
     },2000);*/

	window.onload = function() {
        var productSliderImageContainer = document.querySelectorAll(".cmp-product-slider__image-container");
        var articleSliderImageContainer = document.querySelectorAll(".cmp-article-slider__image");
        var recipeSliderImageContainer = document.querySelectorAll(".cmp-recipe-slider__image");

        let defaultOffsetWidth = 3000;

        if(productSliderImageContainer.length>0) {
            for(var index=0; index<productSliderImageContainer.length;index++){
                var productImgContainer = Math.round(productSliderImageContainer[index].offsetWidth);
                var images = Array.prototype.slice.call(productSliderImageContainer[index].querySelectorAll('img'));
                
                if(productImgContainer === 0 && navigator.userAgent.match(/firefox|fxios/i)){
					productImgContainer = defaultOffsetWidth;
                }
                
                images.forEach((image)=>{
                var imgSource = image.getAttribute('src');
                if(imgSource.includes('scene7.com')){
                    var url = new URL(imgSource);
                    var urlParams = url.searchParams;
                    urlParams.set('hei', productImgContainer);
                    imgSource = url.toString();
                }else{
                    imgSource = imgSource.concat('?im=Resize=('+productImgContainer+')')
                }
                image.setAttribute('src', imgSource);
            });
        }
        }

        if(articleSliderImageContainer.length > 0 ){
            for(var index=0; index<articleSliderImageContainer.length;index++){
            	var articleImgContainer = Math.round(articleSliderImageContainer[index].offsetWidth);
                var innerDiv =articleSliderImageContainer[index].querySelector('div');
                var images = Array.prototype.slice.call(innerDiv.querySelectorAll('img'));;
                images.forEach((image)=>{
                var imgSource = image.getAttribute('src');

                if(imgSource.includes('scene7.com')){
                    var url = new URL(imgSource);
                    var urlParams = url.searchParams;
                    urlParams.set('hei', articleImgContainer);
                    imgSource = url.toString();
                }else{
                    imgSource = imgSource.concat('?im=Resize=('+articleImgContainer+')')
                }
                image.setAttribute('src', imgSource);
            });
        }
        }

       if(recipeSliderImageContainer.length > 0){
            for(var index=0; index < recipeSliderImageContainer.length ;index++){
            	var recipeImgContainer = Math.round(recipeSliderImageContainer[index].offsetWidth);
                var innerDiv = recipeSliderImageContainer[index].querySelector('div');
                var images = Array.prototype.slice.call(innerDiv.querySelectorAll('img'));
                images.forEach((image)=>{
                var imgSource = image.getAttribute('src');

                if(imgSource.includes('scene7.com')){
                    var url = new URL(imgSource);
                    var urlParams = url.searchParams;
                    urlParams.set('hei', recipeImgContainer);
                    imgSource = url.toString();
                }else{
                    imgSource = imgSource.concat('?im=Resize=('+recipeImgContainer+')')
                }
                image.setAttribute('src', imgSource);
            });

        }
}
	};
	
	

	let allElements = [];
	document.querySelectorAll("div[animation-apply='true']").forEach(function(component){
		if(component.parentElement.querySelector(".animationEnabled").value == "quick-links_default" || component.parentElement.querySelector(".animationEnabled").value == "quick-links_secondary")
			allElements.push(component);
	});
	
	let windowHeight = window.innerHeight;  
	
	let myFlag = []; 
    for (let k = 0; k < allElements.length; k++) {
        myFlag[k]=0;
    }

  const elems = () => {
                 for (let i = 0; i < allElements.length; i++) { //  loop through the sections
                     let viewportOffset = allElements[i].getBoundingClientRect(); //  returns the size of an element and its position relative to the viewport
                     let top = viewportOffset.top; //  get the offset top
					 let directionVal = allElements[i].getAttribute('animation-direction');
					 let speedVal = allElements[i].getAttribute('animation-speed');
					 let distanceVal = allElements[i].getAttribute('animation-distance');
                     if(directionVal=="default"){
                     	directionVal='transform: translateY('+distanceVal+')';
                  	 }else if(directionVal=="left"){
                     	directionVal='transform: translateX('+distanceVal+')';
                     }else if(directionVal=="right"){
                     	directionVal='transform: translateX(-'+distanceVal+')';
                  	 }

                    var currenttinysliderClass= allElements[i].getElementsByClassName("tns-outer");
					var currenttinysliderIdStr=currenttinysliderClass[0].getAttribute("id");
					var currenttinysliderId=currenttinysliderIdStr.split("-")[0];
					if(window.innerWidth>1024){
                        document.getElementById(currenttinysliderId+"-item3").classList.add("tns-slide-active");
                    }else if((window.innerWidth<1024) && (window.innerWidth>767)){
                        document.getElementById(currenttinysliderId+"-item2").classList.add("tns-slide-active");
                    }else if(window.innerWidth<767){
                        document.getElementById(currenttinysliderId+"-item1").classList.add("tns-slide-active");
                    }

					let childrenEle = allElements[i].getElementsByClassName("tns-slide-active");

					if (top < windowHeight) { //  if the top offset is less than the window height

                       if(myFlag[i]==0){
                       for (let j = 1; j <= childrenEle.length; j++) {
                          //alert(j);

						var finalSpeed=Number(speedVal)+(j*.3);                         
						//alert(test);
						childrenEle[j-1].style.cssText= directionVal+'; animation: come-in '+finalSpeed+'s ease forwards;';
                               myFlag[i]=1;
                           }

						}
						allElements[i].querySelector(".prev").classList.add("animatedFadeInUp","fadeInUp");
						allElements[i].querySelector(".next").classList.add("animatedFadeInUp","fadeInUp");
						allElements[i].querySelector(".prev").style.cssText="animation-duration: "+(Number(speedVal)+.3)+"s;animation-fill-mode: both;";
                        allElements[i].querySelector(".next").style.cssText="animation-duration: "+(Number(speedVal)+.3)+"s;animation-fill-mode: both;";

                       // document.querySelector(".control .prev").classList.add("animated","animatedFadeInUp","fadeInUp");
                     } else {
                        // allElements[i].classList.remove("come-in"); //  remove the class
                     }
                 }
             }
             //elems();
             window.addEventListener('scroll', elems);

  
});